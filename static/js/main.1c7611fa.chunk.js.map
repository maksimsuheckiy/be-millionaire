{"version":3,"sources":["assets/hand.png","app/components/RewardItem/RewardItem.tsx","app/components/AnswerOptionItem/AnswerOptionItem.tsx","app/store/reducers/GameSlice.ts","app/store/selectors/SelectListRewards.tsx","app/store/hooks/redux.ts","app/utils.ts","app/components/BurgerMenu/BurgerMenu.tsx","app/containers/Game/Game.tsx","app/components/Button/Button.tsx","app/containers/GameStart/GameStart.tsx","app/containers/GameOver/GameOver.tsx","app/containers/NotFound/NotFound.tsx","app/AppRouter/Routes.tsx","app/AppRouter/AppRouter.tsx","app/App.tsx","app/store/store.ts","index.js"],"names":["module","exports","__webpack_require__","p","RewardItem","props","text","isActive","isDisabled","react_default","a","createElement","className","classNames","reward--active","triangle--active","reward--disabled","AnswerOptionItem","letterNumbering","onSelectAnswer","answerVariant","useRef","onClick","current","textContent","ref","getData","createAsyncThunk","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","GameSlice","createSlice","name","initialState","questions","currentQuestion","question","answer","allAnswers","amount","id","winningReward","status","error","reducers","setNextAnswer","state","action","payload","setWinningReward","extraReducers","builder","addMatcher","isAnyOf","pending","fulfilled","isRejectedWithValue","actions","SelectListRewards","createSelector","data","map","concat","useAppSelector","useSelector","setLetterNumbering","index","String","fromCharCode","BurgerMenu","onSetActive","burger__btn--close","Game","dispatch","useDispatch","history","useHistory","_useState","useState","_useState2","slicedToArray","menuActive","setMenuActive","_useState3","_useState4","answers","setAnswers","listRewards","allQuestions","useEffect","mixedArray","value","sort","Math","random","b","_ref","handleSelectAnswer","length","push","pathname","components_BurgerMenu_BurgerMenu","components_AnswerOptionItem_AnswerOptionItem","key","menu-content","reward","components_RewardItem_RewardItem","Button","GameStart","src","hand","alt","components_Button_Button","GameOver","winningAmount","goBack","NotFound","Routes","path","exact","component","containers_GameStart_GameStart","containers_Game_Game","containers_GameOver_GameOver","containers_NotFound_NotFound","AppRouter","react_router","route","children","App","app_AppRouter_AppRouter","rootReducer","combineReducers","gameReducer","store","configureStore","reducer","ReactDOM","render","es","react_router_dom","app_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iXCwBzBC,EAdI,SAACC,GAAiB,IAC1BC,EAA8BD,EAA9BC,KAAMC,EAAwBF,EAAxBE,SAAUC,EAAcH,EAAdG,WAEvB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,SAAU,CAACC,iBAAkBP,KACpDE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,mBAAoB,CAACE,mBAAoBR,MACpEE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,cAAe,CAACC,iBAAkBP,GAAW,CAACS,mBAAoBR,KACxFF,GAELG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,mBAAoB,CAACE,mBAAoBR,QCYjEU,SAtBU,SAACZ,GAAiB,IAChCC,EAAyCD,EAAzCC,KAAMY,EAAmCb,EAAnCa,gBAAiBC,EAAkBd,EAAlBc,eACxBC,EAAgBC,iBAA6B,MAQnD,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASU,QAPR,WACZF,EAAcG,SACdJ,EAAeC,EAAcG,QAAQC,eAMrCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAA6BM,GAC7CT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBa,IAAKL,GAAgBd,IAE7DG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDCTdc,EAAUC,YACnB,iBADmCC,OAAAC,EAAA,EAAAD,CAAAE,EAAApB,EAAAqB,KAEnC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAApB,EAAAwB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC2BC,MAAM,aADjC,cACUL,EADVE,EAAAI,KAAAJ,EAAAK,OAAA,SAEWP,EAASQ,QAFpB,wBAAAN,EAAAO,SAAAV,OAMSW,EAAYC,YAAY,CACjCC,KAAM,OACNC,aAxBoC,CACpCC,UAAW,GACXC,gBAAiB,CACbC,SAAY,GACZC,OAAU,GACVC,WAAc,GACdC,OAAU,KACVC,GAAM,GAEVC,cAAe,GACfC,OAAQ,GACRC,MAAO,MAcPC,SAAU,CACNC,cADM,SACQC,EAAOC,GACjBD,EAAMX,gBAAkBW,EAAMZ,UAAUa,EAAOC,UAEnDC,iBAJM,SAIWH,EAAOC,GACpBD,EAAML,cAAgBM,EAAOC,UAGrCE,cAAe,SAACC,GACZA,EACKC,WACGC,YAAQxC,EAAQyC,SAChB,SAACR,GACGA,EAAMJ,OAAS,UACfI,EAAMH,MAAQ,OAGrBS,WACGC,YAAQxC,EAAQ0C,WAChB,SAACT,EAAOC,GACJD,EAAMJ,OAAS,UACfI,EAAMZ,UAAYa,EAAOC,QACzBF,EAAMX,gBAAkBY,EAAOC,QAAQ,KAG9CI,WACGI,YAAoB3C,GACpB,SAACiC,EAAOC,GACJD,EAAMH,MAAQI,EAAOJ,aAMUb,EAAU2B,QAA9CZ,kBAAeI,qBACfnB,IAAf,gBC5Da4B,EAAoBC,YAC7B,SAACb,GAAD,OAAsBA,EAAMc,KAAK1B,WACjC,SAACA,GACG,OAAOA,EAAU2B,IAAI,SAAAzB,GAAQ,UAAA0B,OAAQ1B,EAASG,YCHzCwB,EAAkDC,ICHlDC,EAAqB,SAACC,GAC/B,OAAOC,OAAOC,aAAa,GAAKF,ICkBrBG,SAVI,SAAC7E,GAAiB,IAC1B8E,EAAyB9E,EAAzB8E,YAAa5E,EAAYF,EAAZE,SAEpB,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASU,QAAS,kBAAM6D,GAAa5E,KAChDE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,cAAe,CAACuE,qBAAsB7E,SCuD9D8E,SAxDF,WACT,IAAMC,EAAWC,cACXC,EAAUC,cAFDC,EAGqBC,oBAAkB,GAHvCC,EAAAhE,OAAAiE,EAAA,EAAAjE,CAAA8D,EAAA,GAGRI,EAHQF,EAAA,GAGIG,EAHJH,EAAA,GAAAI,EAIeL,mBAAmB,IAJlCM,EAAArE,OAAAiE,EAAA,EAAAjE,CAAAoE,EAAA,GAIRE,EAJQD,EAAA,GAICE,EAJDF,EAAA,GAKTG,EAAcxB,EAAeL,GAC7B8B,EAAezB,EAAe,SAAAjB,GAAK,OAAIA,EAAMc,KAAK1B,YAClDC,EAAkB4B,EAAe,SAAAjB,GAAK,OAAIA,EAAMc,KAAKzB,kBACpDC,EAA4CD,EAA5CC,SAAUG,EAAkCJ,EAAlCI,OAAQF,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,WAAYE,EAAML,EAANK,GAE7CiD,oBAAU,WACNhB,EAAS5D,MACV,IAEH4E,oBAAU,WACN,IAAMC,EAA0BpD,EFvBvBuB,IAAI,SAAA8B,GAAK,MAAK,CAACA,QAAOC,KAAMC,KAAKC,YACjCF,KAAK,SAAC/F,EAAGkG,GAAJ,OAAUlG,EAAE+F,KAAOG,EAAEH,OAC1B/B,IAAI,SAAAmC,GAAA,OAAAA,EAAEL,QEsBfL,EAAWI,IACZ,CAACvD,IAEJ,IAAM8D,EAAqB,SAAC1F,GACpBA,IAAkB8B,GAAUG,IAAOgD,EAAaU,OAChDzB,EAAS5B,EAAcL,KAEvBiC,EAASxB,EAAiBV,IAC1BoC,EAAQwB,KAAK,CAACC,SAAU,iBAIhC,OACIxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACuG,EAAD,CAAY/B,YAAaY,EAAexF,SAAUuF,IAClDrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBqC,IAEvCxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACVsF,EAAQxB,IAAI,SAACxB,EAAQ6B,GAAT,OACTtE,EAAAC,EAAAC,cAACwG,EAAD,CAAkBC,IAAKrC,EACLzE,KAAM4C,EACNhC,gBAAiB4D,EAAmBC,GACpC5D,eAAgB2F,QAI9CrG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,QAAS,CAACwG,eAAgBvB,KAChDM,EAAY1B,IAAI,SAAC4C,EAAQvC,GAAT,OACbtE,EAAAC,EAAAC,cAAC4G,EAAD,CAAYH,IAAKrC,EACLzE,KAAMgH,EACN/G,SAAU8C,MAAS0B,EACnBvE,WAAYuE,EAAQ1B,UCjDrCmE,SALA,SAACnH,GAAiB,IACtBC,EAAiBD,EAAjBC,KAAMgB,EAAWjB,EAAXiB,QACb,OAAOb,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASU,QAASA,GAAUhB,sBCoB1CmH,SAxBG,WACd,IAAMjC,EAAUC,cAQhB,OACIhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAK+G,IAAKC,IAAMC,IAAI,OAAOhH,UAAU,wBAEzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,kCACAH,EAAAC,EAAAC,cAACkH,EAAD,CAAQvH,KAAK,QAAQgB,QAdZ,WACrBkE,EAAQwB,KAAK,CACTC,SAAU,kBCwBPa,SA5BE,WACb,IAAMtC,EAAUC,cACVsC,EAAgBnD,EAAe,SAAAjB,GAAK,OAAIA,EAAMc,KAAKnB,gBAMzD,OACI7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAK+G,IAAKC,IAAMC,IAAI,OAAOhH,UAAU,wBAEzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACRmH,GAAiB,gBAEtBtH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACRmH,EAAa,IAAApD,OAAOoD,EAAP,WAAgC,0CAElDtH,EAAAC,EAAAC,cAACkH,EAAD,CAAQvH,KAAMyH,EAAgB,YAAc,QAASzG,QAjB5C,WACrBkE,EAAQwC,iBCNDC,EAJE,WACb,OAAOxH,EAAAC,EAAAC,cAAA,wBCuBIuH,EApBA,CACX,CACIC,KAAM,IACNC,OAAO,EACPC,UAAW,kBAAM5H,EAAAC,EAAAC,cAAC2H,EAAD,QAErB,CACIH,KAAM,QACNE,UAAW,kBAAM5H,EAAAC,EAAAC,cAAC4H,EAAD,QAErB,CACIJ,KAAM,aACNE,UAAW,kBAAM5H,EAAAC,EAAAC,cAAC6H,EAAD,QAErB,CACIL,KAAM,IACNE,UAAW,kBAAM5H,EAAAC,EAAAC,cAAC8H,EAAD,SCHVC,EAfG,WACd,OACIjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACKT,EAAOxD,IAAI,SAACkE,GAAD,OACRnI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACIvB,IAAKwB,EAAMT,KACXA,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,MACbS,SAAUpI,EAAAC,EAAAC,cAACiI,EAAMP,UAAP,YCLfS,EAJH,WACR,OAAOrI,EAAAC,EAAAC,cAACoI,EAAD,cCDLC,EAAcC,YAAgB,CAChCxE,KAAMyE,YCIJC,EDAKC,YAAe,CAClBC,QAASL,ICCjBM,IAASC,OACL9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAUL,MAAOA,GACb1I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACIhJ,EAAAC,EAAAC,cAAC+I,EAAD,QAGRC,SAASC,eAAe","file":"static/js/main.1c7611fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.9691cd37.png\";","import React from \"react\";\nimport './RewardItem.scss';\nimport classNames from \"classnames\";\n\ntype Props = {\n    text: string;\n    isActive: boolean;\n    isDisabled: boolean;\n}\n\nconst RewardItem = (props: Props) => {\n    const {text, isActive, isDisabled} = props;\n\n    return (\n        <div className={classNames('reward', {'reward--active': isActive})}>\n            <div className={classNames('reward__triangle', {'triangle--active': isActive})}/>\n            <div className={classNames('reward-text', {'reward--active': isActive}, {'reward--disabled': isDisabled})}>\n                {text}\n            </div>\n            <div className={classNames('reward__triangle', {'triangle--active': isActive})}/>\n        </div>\n    )\n}\n\nexport default RewardItem","import React, {useRef} from \"react\";\nimport './AnswerOptionItem.scss';\n\ntype Props = {\n    text: string;\n    letterNumbering: string;\n    onSelectAnswer: (answerVariant: string | null) => void;\n}\n\nconst AnswerOptionItem = (props: Props) => {\n    const {text, letterNumbering, onSelectAnswer} = props;\n    const answerVariant = useRef<HTMLParagraphElement>(null);\n\n    const handleClick = () => {\n        if (answerVariant.current) {\n            onSelectAnswer(answerVariant.current.textContent);\n        }\n    }\n\n    return (\n        <div className=\"answer\" onClick={handleClick}>\n            <div className=\"answer__triangle\"/>\n            <div className=\"answer-content\">\n                <span className=\"answer-content__numbering\">{letterNumbering}</span>\n                <p className=\"answer-content__text\" ref={answerVariant}>{text}</p>\n            </div>\n            <div className=\"answer__triangle\"/>\n        </div>\n    )\n}\n\nexport default AnswerOptionItem","import {createAsyncThunk, createSlice, isAnyOf, isRejectedWithValue} from \"@reduxjs/toolkit\";\nimport {InitialStateTypes} from \"../../models/InitialData\";\n\nconst initialState: InitialStateTypes = {\n    questions: [],\n    currentQuestion: {\n        \"question\": '',\n        \"answer\": '',\n        \"allAnswers\": [],\n        \"amount\": null,\n        \"id\": 1,\n    },\n    winningReward: '',\n    status: '',\n    error: null,\n}\n\nexport const getData = createAsyncThunk(\n    'data/questions',\n    async () => {\n        const response = await fetch('data.json')\n        return response.json()\n    }\n)\n\nexport const GameSlice = createSlice({\n    name: 'data',\n    initialState,\n    reducers: {\n        setNextAnswer(state, action) {\n            state.currentQuestion = state.questions[action.payload];\n        },\n        setWinningReward(state, action) {\n            state.winningReward = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addMatcher(\n                isAnyOf(getData.pending),\n                (state) => {\n                    state.status = 'loading';\n                    state.error = null;\n                }\n            )\n            .addMatcher(\n                isAnyOf(getData.fulfilled),\n                (state, action) => {\n                    state.status = 'success'\n                    state.questions = action.payload;\n                    state.currentQuestion = action.payload[0];\n                }\n            )\n            .addMatcher(\n                isRejectedWithValue(getData),\n                (state, action) => {\n                    state.error = action.error\n                }\n            )\n    }\n})\n\nexport const { setNextAnswer, setWinningReward } = GameSlice.actions;\nexport default GameSlice.reducer;","import {createSelector} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../store\";\n\nexport const SelectListRewards = createSelector(\n    (state: RootState) => state.data.questions,\n    (questions) => {\n        return questions.map(question => `$${question.amount}`);\n    }\n)","import {TypedUseSelectorHook, useSelector} from 'react-redux'\nimport {RootState} from \"../store\";\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","export const setLetterNumbering = (index: number) => {\n    return String.fromCharCode(65 + index)\n}\n\nexport const shuffleArray = (array: string[]) => {\n    return array.map(value => ({value, sort: Math.random()}))\n                .sort((a, b) => a.sort - b.sort)\n                .map(({value}) => value)\n}","import React, {SetStateAction, Dispatch} from \"react\";\nimport classNames from \"classnames\";\nimport './BurgerMenu.scss';\n\ntype Props = {\n    onSetActive: Dispatch<SetStateAction<boolean>>;\n    isActive: boolean;\n}\n\nconst BurgerMenu = (props: Props) => {\n    const {onSetActive, isActive} = props;\n\n    return (\n        <div className=\"burger\" onClick={() => onSetActive(!isActive)}>\n            <div className={classNames(\"burger__btn\", {'burger__btn--close': isActive})}/>\n        </div>\n    )\n};\n\nexport default BurgerMenu","import React, {useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router\";\nimport RewardItem from \"../../components/RewardItem/RewardItem\";\nimport AnswerOptionItem from \"../../components/AnswerOptionItem/AnswerOptionItem\";\nimport {getData, setNextAnswer, setWinningReward} from \"../../store/reducers/GameSlice\";\nimport {SelectListRewards} from \"../../store/selectors/SelectListRewards\";\nimport {useAppSelector} from \"../../store/hooks/redux\";\nimport {setLetterNumbering, shuffleArray} from '../../utils';\nimport BurgerMenu from \"../../components/BurgerMenu/BurgerMenu\";\nimport classNames from \"classnames\";\nimport './Game.scss';\n\nconst Game = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [menuActive, setMenuActive] = useState<boolean>(false);\n    const [answers, setAnswers] = useState<string[]>([]);\n    const listRewards = useAppSelector(SelectListRewards);\n    const allQuestions = useAppSelector(state => state.data.questions);\n    const currentQuestion = useAppSelector(state => state.data.currentQuestion);\n    const {question, amount, answer, allAnswers, id} = currentQuestion;\n\n    useEffect(() => {\n        dispatch(getData())\n    }, [])\n\n    useEffect(() => {\n        const mixedArray = shuffleArray(allAnswers);\n        setAnswers(mixedArray)\n    }, [currentQuestion])\n\n    const handleSelectAnswer = (answerVariant: string | null) => {\n        if (answerVariant === answer && id !== allQuestions.length) {\n            dispatch(setNextAnswer(id))\n        } else {\n            dispatch(setWinningReward(amount));\n            history.push({pathname: '/game-over'})\n        }\n    }\n\n    return (\n        <div className=\"game-wrapper\">\n            <div className=\"main\">\n                <BurgerMenu onSetActive={setMenuActive} isActive={menuActive}/>\n                <div className=\"question-box\">\n                    <p className=\"question-box__text\">{question}</p>\n                </div>\n                <div className=\"answer-container\">\n                    {answers.map((answer, index) => (\n                        <AnswerOptionItem key={index}\n                                          text={answer}\n                                          letterNumbering={setLetterNumbering(index)}\n                                          onSelectAnswer={handleSelectAnswer}/>\n                    ))}\n                </div>\n            </div>\n            <div className={classNames(\"aside\", {'menu-content': menuActive})}>\n                {listRewards.map((reward, index) => (\n                    <RewardItem key={index}\n                                text={reward}\n                                isActive={id === ++index}\n                                isDisabled={index < id}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Game","import React from 'react'\nimport './Button.scss';\n\ntype Props = {\n    text: string;\n    onClick: () => void;\n}\n\nconst Button = (props: Props) => {\n    const {text, onClick} = props;\n    return <button className=\"button\" onClick={onClick}>{text}</button>\n}\n\nexport default Button","import React from \"react\";\nimport {useHistory} from \"react-router\";\nimport Button from \"../../components/Button/Button\";\nimport hand from '../../../assets/hand.png';\nimport './GameStart.scss';\n\nconst GameStart = () => {\n    const history = useHistory();\n\n    const handleClickStart = () => {\n        history.push({\n            pathname: '/game'\n        });\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"container\">\n                <div className=\"image-box\">\n                    <img src={hand} alt=\"Hand\" className=\"image-box__picture\"/>\n                </div>\n                <div className=\"content\">\n                    <p className=\"content__desc\">Who wants to be a millionaire?</p>\n                    <Button text=\"Start\" onClick={handleClickStart}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GameStart","import React from \"react\";\nimport {useHistory} from \"react-router\";\nimport hand from \"../../../assets/hand.png\";\nimport Button from \"../../components/Button/Button\";\nimport {useAppSelector} from \"../../store/hooks/redux\";\nimport './GameOver.scss';\n\nconst GameOver = () => {\n    const history = useHistory();\n    const winningAmount = useAppSelector(state => state.data.winningReward);\n\n    const handleClickStart = () => {\n        history.goBack();\n    }\n\n    return (\n        <div className=\"winning-wrapper\">\n            <div className=\"winning-container\">\n                <div className=\"winning-container__image-box\">\n                    <img src={hand} alt=\"Hand\" className=\"image-box__picture\"/>\n                </div>\n                <div className=\"content\">\n                    <p className=\"content__title\">\n                        {winningAmount && 'Total score:'}\n                    </p>\n                    <p className=\"content__subtitle\">\n                        {winningAmount ? `$${winningAmount} earned` : 'Click on the button to start the game.'}\n                    </p>\n                    <Button text={winningAmount ? 'Try again' : 'Start'} onClick={handleClickStart}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GameOver","import React from \"react\";\n\nconst NotFound = () => {\n    return <h1>Not found</h1>\n}\n\nexport default NotFound","import React from \"react\";\nimport Game from \"../containers/Game/Game\";\nimport GameStart from \"../containers/GameStart/GameStart\";\nimport GameOver from \"../containers/GameOver/GameOver\";\nimport NotFound from \"../containers/NotFound/NotFound\";\n\nconst Routes = [\n    {\n        path: '/',\n        exact: true,\n        component: () => <GameStart/>\n    },\n    {\n        path: '/game',\n        component: () => <Game/>\n    },\n    {\n        path: '/game-over',\n        component: () => <GameOver/>\n    },\n    {\n        path: \"*\",\n        component: () => <NotFound />\n    }\n]\n\nexport default Routes","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Routes from \"./Routes\";\n\nconst AppRouter = () => {\n    return (\n        <Switch>\n            {Routes.map((route) => (\n                <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact}\n                    children={<route.component/>}\n                />\n            ))}\n        </Switch>\n    )\n}\n\nexport default AppRouter","import React from 'react';\nimport AppRouter from \"./AppRouter/AppRouter\";\n\nconst App = () => {\n    return <AppRouter />;\n}\n\nexport default App;\n","import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\nimport gameReducer from './reducers/GameSlice';\n\nconst rootReducer = combineReducers({\n    data: gameReducer\n})\n\nexport const setupStore = () => {\n    return configureStore({\n        reducer: rootReducer\n    })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppStore = ReturnType<typeof setupStore>;\nexport type AppDispatch = AppStore['dispatch'];","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport App from './app/App';\nimport {Provider} from \"react-redux\";\nimport {setupStore} from \"./app/store/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst store = setupStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}